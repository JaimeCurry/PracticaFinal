<?php

namespace Proxies\__CG__\Biblioteca\DemoBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Biblioteca extends \Biblioteca\DemoBundle\Entity\Biblioteca implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function setNombre($nombre)
    {
        $this->__load();
        return parent::setNombre($nombre);
    }

    public function getNombre()
    {
        $this->__load();
        return parent::getNombre();
    }

    public function setDireccion($direccion)
    {
        $this->__load();
        return parent::setDireccion($direccion);
    }

    public function getDireccion()
    {
        $this->__load();
        return parent::getDireccion();
    }

    public function setCiudad($ciudad)
    {
        $this->__load();
        return parent::setCiudad($ciudad);
    }

    public function getCiudad()
    {
        $this->__load();
        return parent::getCiudad();
    }

    public function setHorarioApertura($horarioApertura)
    {
        $this->__load();
        return parent::setHorarioApertura($horarioApertura);
    }

    public function getHorarioApertura()
    {
        $this->__load();
        return parent::getHorarioApertura();
    }

    public function setHorarioCierre($horarioCierre)
    {
        $this->__load();
        return parent::setHorarioCierre($horarioCierre);
    }

    public function getHorarioCierre()
    {
        $this->__load();
        return parent::getHorarioCierre();
    }

    public function setFechaFundacion($fechaFundacion)
    {
        $this->__load();
        return parent::setFechaFundacion($fechaFundacion);
    }

    public function getFechaFundacion()
    {
        $this->__load();
        return parent::getFechaFundacion();
    }

    public function setNormas($normas)
    {
        $this->__load();
        return parent::setNormas($normas);
    }

    public function getNormas()
    {
        $this->__load();
        return parent::getNormas();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'nombre', 'direccion', 'ciudad', 'horarioApertura', 'horarioCierre', 'fechaFundacion', 'normas');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}